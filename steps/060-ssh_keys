#!/usr/bin/perl -w
# Install SSH keys into root and user's authorized_keys

# Available skip_steps items:
#	root_keys - Update root's ssh authorized_keys
#	user_keys - Update individual users's ssh authorized_keys

return unless i_has("user") || i_has("ssh_keys_add");

my %keys;
my %all_keys;

return l "Can't get authorized_keys file"
	unless my $text = http_file "conf/authorized_keys";
foreach (split(/[\r\n]+/, $text))
{
	my($key, $name) = $_ =~ /(.*) ([\w\@\-_]+)$/;
	$all_keys{$name} ||= "";
	$all_keys{$name} .= "$_\n";
}

if (i_should("user_keys"))
{
	foreach my $u (i_isa_fetchall("user"))
	{
		foreach my $username (keys %$u)
		{
			$keys{$username} ||= { $username => 1 };
			if ($u->{$username}{ssh_keys})
			{
				$keys{$username} ||= {};
				$keys{$username}->{$_}++ foreach (@{$u->{$username}{ssh_keys}});
			}
		}
	}
}

if (i_should("root_keys"))
{
	foreach my $x (i_isa_fetchall("ssh_keys_add"))
	{
		$x = [$x] unless ref $x eq 'ARRAY';
		$keys{root}->{$_}++ foreach (@$x);
	}
}

foreach (keys %keys)
{
	my($name,$passwd,$uid,$gid,$quota,$comment,$gcos,$dir,$shell,$expire) = getpwnam($_);
	if (!$name)
	{
		v "User $_ doesn't exist";
		next;
	}
	if (! -d $dir)
	{
		v "User ${name}'s homedir doesn't exist";
		next;
	}
	my @k;
	push @k, $all_keys{$_} || undef foreach keys %{$keys{$_}};
	v "Checking keys for $_ -> ". join(", ", keys %{$keys{$_}});
	my $text = join("", grep { defined $_ } @k);
	if (!$text)
	{
		if ($_ eq 'root')
		{
			l "No keys found for $_";
		}
		else
		{
			v "No keys found for $_";
		}
		next;
	}
	dir_check(-dir => "$dir/.ssh", -mode => 0700, -owner => $name, -group => $gid);
	text_install(-file => "$dir/.ssh/authorized_keys", -text => $text, -mode => 0644);
}

